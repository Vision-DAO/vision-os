/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Proposal,
  ProposalInterface,
} from "../../../contracts/Prop.sol/Proposal";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_ipfsAddr",
        type: "string",
      },
      {
        internalType: "string",
        name: "_payload",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "contract Idea",
        name: "_governor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum VoteKind",
        name: "nature",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "organizer",
        type: "address",
      },
    ],
    name: "VoteStarted",
    type: "event",
  },
  {
    inputs: [],
    name: "active",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "enum VoteKind",
        name: "nature",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum VoteKind",
        name: "nature",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expiry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "contract Idea",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initiateVotingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ipfsAddr",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nAffirmative",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nVoters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payload",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e9238038062001e928339818101604052810190620000379190620004b8565b620000576200004b620000eb60201b60201c565b620000f360201b60201c565b83600190805190602001906200006f929190620001b7565b50826002908051906020019062000088929190620001b7565b50816006819055506000600781905550600060088190555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620005cd565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001c59062000597565b90600052602060002090601f016020900481019282620001e9576000855562000235565b82601f106200020457805160ff191683800117855562000235565b8280016001018555821562000235579182015b828111156200023457825182559160200191906001019062000217565b5b50905062000244919062000248565b5090565b5b808211156200026357600081600090555060010162000249565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002d08262000285565b810181811067ffffffffffffffff82111715620002f257620002f162000296565b5b80604052505050565b60006200030762000267565b9050620003158282620002c5565b919050565b600067ffffffffffffffff82111562000338576200033762000296565b5b620003438262000285565b9050602081019050919050565b60005b838110156200037057808201518184015260208101905062000353565b8381111562000380576000848401525b50505050565b60006200039d62000397846200031a565b620002fb565b905082815260208101848484011115620003bc57620003bb62000280565b5b620003c984828562000350565b509392505050565b600082601f830112620003e957620003e86200027b565b5b8151620003fb84826020860162000386565b91505092915050565b6000819050919050565b620004198162000404565b81146200042557600080fd5b50565b60008151905062000439816200040e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200046c826200043f565b9050919050565b600062000480826200045f565b9050919050565b620004928162000473565b81146200049e57600080fd5b50565b600081519050620004b28162000487565b92915050565b60008060008060808587031215620004d557620004d462000271565b5b600085015167ffffffffffffffff811115620004f657620004f562000276565b5b6200050487828801620003d1565b945050602085015167ffffffffffffffff81111562000528576200052762000276565b5b6200053687828801620003d1565b9350506040620005498782880162000428565b92505060606200055c87828801620004a1565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005b057607f821691505b60208210811415620005c757620005c662000568565b5b50919050565b6118b580620005dd6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063a878f85811610071578063a878f8581461024e578063e184c9be1461026c578063e53e747f1461028a578063f2fde38b14610294578063f9135be9146102b05761010b565b8063715018a6146101ea5780638a671dbb146101f45780638da5cb5b146102125780639ef27b00146102305761010b565b80631f3e7439116100de5780631f3e74391461018857806343bd682d146101a657806348f85451146101c257806364fd9a94146101cc5761010b565b806302fb0c5e1461011057806305df721e1461012e5780630c340a241461014c5780630fb5a6b41461016a575b600080fd5b6101186102cc565b6040516101259190610d51565b60405180910390f35b6101366102e6565b6040516101439190610e05565b60405180910390f35b610154610374565b6040516101619190610ea6565b60405180910390f35b61017261039a565b60405161017f9190610eda565b60405180910390f35b6101906103a0565b60405161019d9190610eda565b60405180910390f35b6101c060048036038101906101bb9190610f93565b6103a6565b005b6101ca610446565b005b6101d46104df565b6040516101e19190610eda565b60405180910390f35b6101f26104e5565b005b6101fc61056d565b6040516102099190610eda565b60405180910390f35b61021a610573565b6040516102279190610ff5565b60405180910390f35b61023861059c565b6040516102459190610eda565b60405180910390f35b6102566105a2565b6040516102639190610e05565b60405180910390f35b610274610630565b6040516102819190610eda565b60405180910390f35b610292610636565b005b6102ae60048036038101906102a99190611010565b61078c565b005b6102ca60048036038101906102c5919061103d565b610884565b005b600080600754141580156102e1575060075442105b905090565b600180546102f3906110ac565b80601f016020809104026020016040519081016040528092919081815260200182805461031f906110ac565b801561036c5780601f106103415761010080835404028352916020019161036c565b820191906000526020600020905b81548152906001019060200180831161034f57829003601f168201915b505050505081565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60055481565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042d90611150565b60405180910390fd5b6104418383836109c7565b505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cd90611150565b60405180910390fd5b42600881905550565b60035481565b6104ed610c6a565b73ffffffffffffffffffffffffffffffffffffffff1661050b610573565b73ffffffffffffffffffffffffffffffffffffffff1614610561576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610558906111bc565b60405180910390fd5b61056b6000610c72565b565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60085481565b600280546105af906110ac565b80601f01602080910402602001604051908101604052809291908181526020018280546105db906110ac565b80156106285780601f106105fd57610100808354040283529160200191610628565b820191906000526020600020905b81548152906001019060200180831161060b57829003601f168201915b505050505081565b60075481565b61063e610c6a565b73ffffffffffffffffffffffffffffffffffffffff1661065c610573565b73ffffffffffffffffffffffffffffffffffffffff16146106b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a9906111bc565b60405180910390fd5b6106ba6102cc565b156106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f19061124e565b60405180910390fd5b60006007541461073f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610736906112ba565b60405180910390fd5b6006544261074d9190611309565b6007819055507ff5d73fe8629d2adca6c98223b45808a4c7fff59ee582a74fc5f75d2340dd6bf0336040516107829190610ff5565b60405180910390a1565b610794610c6a565b73ffffffffffffffffffffffffffffffffffffffff166107b2610573565b73ffffffffffffffffffffffffffffffffffffffff1614610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff906111bc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610878576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086f906113d1565b60405180910390fd5b61088181610c72565b50565b61088c6102cc565b6108cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c290611463565b60405180910390fd5b80600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109279190610ff5565b60206040518083038186803b15801561093f57600080fd5b505afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190611498565b10156109b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109af90611537565b60405180910390fd5b6109c33383836109c7565b5050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bc7bd0f630866040518363ffffffff1660e01b8152600401610a26929190611578565b60606040518083038186803b158015610a3e57600080fd5b505afa158015610a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7691906116d8565b90506000816020015114610a8b576000610a8e565b60015b60ff1660046000828254610aa29190611309565b92505081905550818160200151600554610abc9190611705565b610ac69190611309565b60058190555060006001811115610ae057610adf611739565b5b836001811115610af357610af2611739565b5b1415610b5857600082600354610b099190611309565b905060006001811115610b1f57610b1e611739565b5b82604001516001811115610b3657610b35611739565b5b1415610b4f57816020015181610b4c9190611705565b90505b80600381905550505b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166308f1cacd8560405180606001604052803073ffffffffffffffffffffffffffffffffffffffff168152602001868152602001876001811115610bd757610bd6611739565b5b8152506040518363ffffffff1660e01b8152600401610bf7929190611810565b600060405180830381600087803b158015610c1157600080fd5b505af1158015610c25573d6000803e3d6000fd5b505050507fd9d9fd0caa964abf9540e87552b03d0f6f1427c14e4d23c647cc9f24efc08488848484604051610c5c93929190611848565b60405180910390a150505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008115159050919050565b610d4b81610d36565b82525050565b6000602082019050610d666000830184610d42565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610da6578082015181840152602081019050610d8b565b83811115610db5576000848401525b50505050565b6000601f19601f8301169050919050565b6000610dd782610d6c565b610de18185610d77565b9350610df1818560208601610d88565b610dfa81610dbb565b840191505092915050565b60006020820190508181036000830152610e1f8184610dcc565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e6c610e67610e6284610e27565b610e47565b610e27565b9050919050565b6000610e7e82610e51565b9050919050565b6000610e9082610e73565b9050919050565b610ea081610e85565b82525050565b6000602082019050610ebb6000830184610e97565b92915050565b6000819050919050565b610ed481610ec1565b82525050565b6000602082019050610eef6000830184610ecb565b92915050565b6000604051905090565b600080fd5b6000610f0f82610e27565b9050919050565b610f1f81610f04565b8114610f2a57600080fd5b50565b600081359050610f3c81610f16565b92915050565b60028110610f4f57600080fd5b50565b600081359050610f6181610f42565b92915050565b610f7081610ec1565b8114610f7b57600080fd5b50565b600081359050610f8d81610f67565b92915050565b600080600060608486031215610fac57610fab610eff565b5b6000610fba86828701610f2d565b9350506020610fcb86828701610f52565b9250506040610fdc86828701610f7e565b9150509250925092565b610fef81610f04565b82525050565b600060208201905061100a6000830184610fe6565b92915050565b60006020828403121561102657611025610eff565b5b600061103484828501610f2d565b91505092915050565b6000806040838503121561105457611053610eff565b5b600061106285828601610f52565b925050602061107385828601610f7e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110c457607f821691505b602082108114156110d8576110d761107d565b5b50919050565b7f5468652063616c6c6572206d7573742062652074686520676f7665726e6f722060008201527f6f66207468652070726f706f73616c2e00000000000000000000000000000000602082015250565b600061113a603083610d77565b9150611145826110de565b604082019050919050565b600060208201905081810360008301526111698161112d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006111a6602083610d77565b91506111b182611170565b602082019050919050565b600060208201905081810360008301526111d581611199565b9050919050565b7f54686520766f74696e6720706572696f642068617320616c726561647920626560008201527f67756e2e00000000000000000000000000000000000000000000000000000000602082015250565b6000611238602483610d77565b9150611243826111dc565b604082019050919050565b600060208201905081810360008301526112678161122b565b9050919050565b7f566f74696e6720706572696f6420616c726561647920737461727465642e0000600082015250565b60006112a4601e83610d77565b91506112af8261126e565b602082019050919050565b600060208201905081810360008301526112d381611297565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061131482610ec1565b915061131f83610ec1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611354576113536112da565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006113bb602683610d77565b91506113c68261135f565b604082019050919050565b600060208201905081810360008301526113ea816113ae565b9050919050565b7f54686520766f74696e6720706572696f6420686173206e6f742079657420626560008201527f67756e2e00000000000000000000000000000000000000000000000000000000602082015250565b600061144d602483610d77565b9150611458826113f1565b604082019050919050565b6000602082019050818103600083015261147c81611440565b9050919050565b60008151905061149281610f67565b92915050565b6000602082840312156114ae576114ad610eff565b5b60006114bc84828501611483565b91505092915050565b7f496e73756666696369656e742062616c616e636520746f20636173742073706560008201527f636966696564206e756d626572206f6620766f7465732e000000000000000000602082015250565b6000611521603783610d77565b915061152c826114c5565b604082019050919050565b6000602082019050818103600083015261155081611514565b9050919050565b600061156282610e73565b9050919050565b61157281611557565b82525050565b600060408201905061158d6000830185611569565b61159a6020830184610fe6565b9392505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115de82610dbb565b810181811067ffffffffffffffff821117156115fd576115fc6115a6565b5b80604052505050565b6000611610610ef5565b905061161c82826115d5565b919050565b600061162c82610f04565b9050919050565b61163c81611621565b811461164757600080fd5b50565b60008151905061165981611633565b92915050565b60008151905061166e81610f42565b92915050565b60006060828403121561168a576116896115a1565b5b6116946060611606565b905060006116a48482850161164a565b60008301525060206116b884828501611483565b60208301525060406116cc8482850161165f565b60408301525092915050565b6000606082840312156116ee576116ed610eff565b5b60006116fc84828501611674565b91505092915050565b600061171082610ec1565b915061171b83610ec1565b92508282101561172e5761172d6112da565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61177181611557565b82525050565b61178081610ec1565b82525050565b6002811061179757611796611739565b5b50565b60008190506117a882611786565b919050565b60006117b88261179a565b9050919050565b6117c8816117ad565b82525050565b6060820160008201516117e46000850182611768565b5060208201516117f76020850182611777565b50604082015161180a60408501826117bf565b50505050565b60006080820190506118256000830185610fe6565b61183260208301846117ce565b9392505050565b611842816117ad565b82525050565b600060608201905061185d6000830186610fe6565b61186a6020830185611839565b6118776040830184610ecb565b94935050505056fea2646970667358221220782910b0a7015937c2bcfc918eedd8e459d19c271709a1e53b9818b16a0d923464736f6c63430008090033";

type ProposalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProposalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Proposal__factory extends ContractFactory {
  constructor(...args: ProposalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ipfsAddr: PromiseOrValue<string>,
    _payload: PromiseOrValue<string>,
    _duration: PromiseOrValue<BigNumberish>,
    _governor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Proposal> {
    return super.deploy(
      _ipfsAddr,
      _payload,
      _duration,
      _governor,
      overrides || {}
    ) as Promise<Proposal>;
  }
  override getDeployTransaction(
    _ipfsAddr: PromiseOrValue<string>,
    _payload: PromiseOrValue<string>,
    _duration: PromiseOrValue<BigNumberish>,
    _governor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _ipfsAddr,
      _payload,
      _duration,
      _governor,
      overrides || {}
    );
  }
  override attach(address: string): Proposal {
    return super.attach(address) as Proposal;
  }
  override connect(signer: Signer): Proposal__factory {
    return super.connect(signer) as Proposal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProposalInterface {
    return new utils.Interface(_abi) as ProposalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Proposal {
    return new Contract(address, _abi, signerOrProvider) as Proposal;
  }
}
